import java.util.ArrayList;
import java.lang.Throwable;

public class CaesarExploits
{
    public Alphabet alphabet;

    public CaesarExploits() throws Exception
    {   
        this.alphabet = new Alphabet("../../etc/Frequency/English.csv");
    }

    public CaesarExploits(Alphabet alphabetVal) throws Exception
    {
        this.alphabet = alphabetVal;
    }

    public int mod(int n, int m) {
        return ((n % m) + m) % m;
    }

    /* Only a copy of the cipher text is known, the best
    * course of action in this case is to try all 
    * possibilities*/
    public void ciphertextOnly(String ciphertext) throws Exception
    {
        Caesar c;
        for(int i=0; i < alphabet.size(); i++)
        {
            c = new Caesar(i, this.alphabet);
            System.out.println(c.decrypt(ciphertext));
        }
    }

    /* a copy of both the plaintext and ciphertext is known,
    * deduce the key
    */
    public int knownPlaintext(String plaintext, String ciphertext)
    {
        return alphabet.indexOf(String.valueOf(ciphertext.charAt(0))) - alphabet.indexOf(String.valueOf(plaintext.charAt(0)));
    }

    /* access to encryption machine. currently passes a
    * an object instance.
    */
    public int chosenPlaintext(Caesar cipher)
    {
        String ciphertext = cipher.encrypt(String.valueOf(this.alphabet.get(0).get(0)));
        return alphabet.indexOf(ciphertext);
    }

    /* access to decryption machine. currently passes a
    * an object instance.
    */
    public int chosenCiphertext(Caesar cipher)
    {
        String plaintext = cipher.decrypt(String.valueOf(this.alphabet.get(0).get(0)));
        int key =  alphabet.indexOf(plaintext);
        key = mod(key * (-1), this.alphabet.size());
        return key;
    }
}
